@startuml


box "Client" #LightGreen
  participant "GUI" as GUI
  participant "LobbyHandler" as LobbyHandler
  participant "GameEventHandler" as GameEventHandler
  participant "REST Client" as RESTClient
  participant "WS Client" as WSClient
end box

box "Server" #LightBlue
  participant "WS Server" as WSServer
  participant "REST Server" as RESTServer
  participant "GameConnection" as GameConnection
  participant "GameManager" as GameManager
  participant "GameFactory" as GameFactory
end box

GUI -> LobbyHandler : createGame()
activate LobbyHandler

LobbyHandler -> RESTClient : createGame()
deactivate LobbyHandler
activate RESTClient

RESTClient --> RESTServer : <<RequestGameCreation>>
deactivate RESTClient
activate RESTServer

RESTServer -> GameConnection : createGame()
activate GameConnection

GameConnection -> GameManager : createGame()
activate GameManager

alt #Pink The nbGame limit is reached
  GameManager x--> GameConnection : ERROR: Too much game launched
  deactivate GameManager
  
  GameConnection --> RESTServer : ERROR: Too much game launched
  deactivate GameConnection
    
  RESTServer --> RESTClient : <<ErrorGameCreation: Too much game launched>>
  deactivate RESTServer
  activate RESTClient
    
  RESTClient --> LobbyHandler : ERROR: Too much game launched
  deactivate RESTClient  
  activate LobbyHandler
    
  LobbyHandler --> GUI : ShowError("Too much game launched")
  deactivate LobbyHandler

else #LightGreen The nbGame limit is not reached
  activate GameManager
  activate GameConnection
  activate RESTServer

  GameManager -> GameFactory : newGame()
  activate GameFactory
  GameFactory --> GameManager : Object: Game - initialized
  deactivate GameFactory
  GameManager --> GameConnection : Object: GameParameters
  deactivate GameManager

  GameConnection --> RESTServer : Object: GameParameters
  deactivate GameConnection
  
  RESTServer --> RESTClient : <<Answer GameParameters>>
  deactivate RESTServer
  activate RESTClient
  
  RESTClient --> LobbyHandler : Object: GameParameters
  deactivate RESTClient
  activate LobbyHandler
  
  LobbyHandler --> GUI : ShowStatus()
  LobbyHandler -> GameEventHandler : InitWS(GameParameters)
  deactivate LobbyHandler
  activate GameEventHandler
  GameEventHandler -> WSClient : InitWS(GameParameters)
  activate WSClient
  
  alt #Pink WSClient could not reach WSServer

    WSClient ->x WSServer : Unable to join server
    WSClient x--> GameEventHandler : ERROR: Cannot join server
    deactivate WSClient
    GameEventHandler --> GUI : ShowError("Unable to initiate communication with the server !")
    deactivate GameEventHandler

    
  else #LightGreen WSClient could reach WSServer
    
    activate WSClient
    
    WSClient -> WSServer : <<InitWS - GameParameters>>
    activate WSServer
    WSServer --> WSClient : <<WS initialized>>
    WSServer -> GameManager : getGame(GameParameters)
    activate GameManager
    
    alt #Pink The game doesn't exist
      GameManager x--> WSServer : ERROR: The game doesn't exist
      deactivate GameManager
      WSServer --> WSClient : <<ErrorGameJoin: The game doesn't exist>>
      WSServer --> WSClient : <<Closing WS>>
      deactivate WSServer
      WSClient --> GameEventHandler : ERROR: The game doesn't exist
      deactivate WSClient
      activate GameEventHandler
      GameEventHandler --> GUI : ShowError("The game doesn't exist")
      deactivate GameEventHandler
      
  else #LightGreen The game doesn't exist
    activate GameManager
    activate WSServer
    activate WSClient
    GameManager --> WSServer : GameInformations
    deactivate GameManager
    WSServer --> WSClient : <<Answer GameInformations>>
    WSClient --> GameEventHandler : Object: GameInformations
    activate GameEventHandler
    GameEventHandler --> GUI : ShowInGameLobby()
    end
  end
end




@enduml