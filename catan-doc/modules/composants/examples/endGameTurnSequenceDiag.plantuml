@startuml


box "Client" #LightGreen
  participant "GUI" as GUI
  participant "GameEventHandler" as GameEventHandler
  participant "WS Client" as WSClient
end box

box "Server" #LightBlue
  participant "WS Server" as WSServer
  participant "GameManager" as GameManager
end box


activate WSClient
activate WSServer


GUI -> GameEventHandler : endGameTurn()
activate GameEventHandler

GameEventHandler -> WSClient : endGameTurn(idGame : String, idClient : String)
deactivate GameEventHandler

WSClient --> WSServer : <<RequestEndGameTurn(idGame : String, idClient : String)>>

activate GameManager
WSServer -> GameManager : endGameTurn(idGame : String, idClient : String)


alt #Pink "idGame doesn't refer to a game that exist"
  GameManager x--> WSServer : ERROR: idGame invalid
  deactivate GameManager
  
  WSServer --> WSClient : <<ErrorGameNotFound: idGame invalid>>

  WSClient --> GameEventHandler : ERROR: idGame invalid
  activate GameEventHandler

  GameEventHandler --> GUI : ShowError("An error occured")
  deactivate GameEventHandler


else #Pink "idClient doesn't refer to a player of this game"
  activate GameManager

  GameManager x--> WSServer : ERROR: idClient invalid
  deactivate GameManager
  
  WSServer --> WSClient : <<ErrorPlayerNotFound: idClient invalid>>

  WSClient --> GameEventHandler : ERROR: idClient invalid
  activate GameEventHandler

  GameEventHandler --> GUI : ShowError("An error occured")
  deactivate GameEventHandler


else #LightGreen idGame and idClient are correct
  
  
  alt #Pink Not client turn's

    activate GameManager

    GameManager x--> WSServer : ERROR: client cannot play now
    deactivate GameManager
    
    WSServer --> WSClient : <<ErrorCannotPlayYet: client must wait his turn>>
  
    WSClient --> GameEventHandler : ERROR: cannot play now
    activate GameEventHandler
  
    GameEventHandler --> GUI : ShowError("An error occured")
    deactivate GameEventHandler
  
    
  else #Pink The player didn't throw dices

    activate GameManager

    GameManager x--> WSServer : ERROR: Player must throw dices before ending his turn
    deactivate GameManager
    
    WSServer --> WSClient : <<ErrorCannotEndGameTurn: Player must throw dices before ending his turn
  
    WSClient --> GameEventHandler : ERROR: Player must throw dices before ending his turn
    activate GameEventHandler
  
    GameEventHandler --> GUI : ShowError("An error occured")
    deactivate GameEventHandler
    
    
  else #LightGreen Player can end his Game turn
    
    activate GameManager

    GameManager --> GameManager : checkForWin()

    alt #LightGreen Player did win
          GameManager --> WSServer : Object: EndGameEvent

          deactivate GameManager

          group #LightYellow Notify/Update [Only for loosing player]
            WSServer --> WSClient : <<GameEvent: EndGameEvent>>
            WSClient --> GameEventHandler : GameEvent: EndGameEvent
            deactivate WSServer
            deactivate WSClient
            activate GameEventHandler

            GameEventHandler --> GUI : ShowEndOfGame()
            GameEventHandler --> GUI : ShowLoosingGame()
            deactivate GameEventHandler
          end

          group #LightYellow Notify/Update [Only for winning player]
            WSServer --> WSClient : <<GameEvent: EndGameEvent>>
            WSClient --> GameEventHandler : GameEvent: EndGameEvent
            deactivate WSServer
            deactivate WSClient
            activate GameEventHandler

            GameEventHandler --> GUI : ShowEndOfGame()
            GameEventHandler --> GUI : ShowWinningGame()
            deactivate GameEventHandler
          end

    else #LightGreen Player did not win
      activate GameManager
      GameManager --> WSServer : Object: EndTurnEvent
      deactivate GameManager
      group #LightYellow Notify/Update [Only for current player]
        WSServer --> WSClient : <<GameEvent: EndTurnEvent>>
        WSClient --> GameEventHandler : GameEvent: EndTurnEvent
        activate GameEventHandler

        GameEventHandler --> GUI : ShowEndTurn()
        GameEventHandler --> GUI : ShowNextPlayer()
        deactivate GameEventHandler
      end

      group #LightYellow Notify/Update [Only for next player]
        WSServer --> WSClient : <<GameEvent: EndTurnEvent>>
        WSClient --> GameEventHandler : GameEvent: EndTurnEvent
        activate GameEventHandler

        GameEventHandler --> GUI : ShowMyGameTurn()
        deactivate GameEventHandler
      end

      group #LightYellow Notify/Update [For other players]
        WSServer --> WSClient : <<GameEvent: EndTurnEvent>>
        WSClient --> GameEventHandler : GameEvent: EndTurnEvent
        activate GameEventHandler

        GameEventHandler --> GUI : ShowNextPlayer()
        deactivate GameEventHandler
      end
    end
  end
end

@enduml