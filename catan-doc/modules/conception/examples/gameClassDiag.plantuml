@startuml

enum Ressource {
Bois
Argile
Laine
Blé
Minerai
}

enum Couleur {
Bleu
Blanc
Orange
Rouge
}

enum Taux_Échange {
4:1
3:1
2:1
}

enum Developpement {
PointsDeVictoire
Chevalier
Monopole
Invention
ConstructionDeRoutes
}

enum FicheSpeciale {
RoutePlusLongue
ArmeePlusPuissante
}

class Partie {
Map<int, Developpement> piocheDeveloppement
Map<int, Ressource> piocheRessource

void calculerArmeePlusPuissante()
void calculerRoutePlusLongue()
List<Joueur> jouerVoleur(Tuile tuile)
Ressource volerRessource(Joueur voleur, Joueur victime)
void monopole(Joueur joueur, Ressource ressource)
void invention(Joueur joueur)
}

class Plateau {
int idTuileVoleur
Map<int, Map<int, Couleur>> routes
Map<int, Intersection> intersections
Map<int, Tuile> tuiles

int getLongueurRoute(Couleur couleur)
void deplacerVoleur(int idTuile)
void distribuerRessources(int valeurJeton)
}

class Port{
Taux_Échange taux
Ressource ressource {@Nullable}

int echange(Ressource ressource)
}

class Tuile{
Intersection[] listIntersections
Ressource ressource {@Nullable}
int valeurJeton

Intersection[] getAllIntersections()
}

class Intersection{
Construction construction {@Nullable}
Port port {@Nullable}

Construction getConstruction()
Port getPort()
}

class Joueur{
Couleur couleur
Map<int, Ressource> mainRessource
Map<int, Developpement> mainDeveloppement
int nbChevaliers
List<FicheSpecial> fichesSpeciales

void commerceMaritime(Ressource rDefausse, Ressource rRecup)
int getPointsVictoire()
int getNbChevaliers()
void jouerChevalier()
void occtroyerFicheSpeciale(FicheSpeciale fiche)
void retirerFicheSpeciale(FicheSpeciale fiche)
void addCarteDeveloppement(Developpement carte)
Ressource getRessourceAleatoire()
int deleteRessource(Ressource ressource)
}

interface Construction {
Couleur getCouleur()
int getPuissance()
}

class Ville {
int puissance

Couleur getCouleur()
int getPuissance()
}

class Colonie {
int puissance

Couleur getCouleur()
int getPuissance()
}



Construction <-d- Ville
Construction <-d- Colonie


Partie *--> "1" Plateau
Plateau *--> "19" Tuile
Plateau *--> "54" Intersection

Tuile "2:3" *-->"6" Intersection
Intersection *--> "0:1" Construction
Intersection --> "2:3" Intersection : Map<int, Map<int, Couleur>> routes

Intersection *--> "0.1" Port

Partie --> "3:4" Joueur
Joueur "1" -- "0:n" Construction

@enduml